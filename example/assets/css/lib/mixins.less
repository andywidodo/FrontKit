/*
 *--------------------------------------------------------------
 *
 * LESS Mixins
 *
 * LESS Mixins for projects with CSS3 & LESS
 * http://lesscss.org
 *
 * @mixin font-size (rem & px based)
 * @mixin font
 * @mixin grid
 * @mixin buttonBackground
 * @mixin text-shadow
 * @mixin box-round (rounded corner box)
 * @mixin box-shadow
 * @mixin vertical-box-gradient
 * @mixin transition
 * @mixin tab-focus
 * @mixin ie7-inline-block
 * @mixin reset-filter
 *
 *
 *--------------------------------------------------------------
 */




/*----------------------------------------------------------

 Font Sizing
 rem sizing based
 @param sizeValue 	: number (desired px size/16)
 note               : 
 - based on rem sizing by Jonathan Snook http://snook.ca/archives/html_and_css/font-size-with-rem
 - the constant number '16' derived from our base font-size 100% which is equal to 16 in px measurement.
 - feel free to edit the constant number according to your baseline font size (62.5%==10, 87,5%=14, so on)
 - target/context = result (Ethan Marcotte http://blog.typekit.com/2011/11/09/type-study-sizing-the-legible-letter/)

----------------------------------------------------------*/
.font-size(@sizeValue){
  font-size: ~"@{sizeValue}px";
  @remValue: (@sizeValue / @baseFontSizeinPX);
  font-size: ~"@{remValue}rem";
}



/*----------------------------------------------------------

 Typographic Mixins
 Define the font-family easier, from sans-serif, serif to monospace.

----------------------------------------------------------*/
#font {
  #family {
    .sans-serif() {
      font-family: 'Helvetica Neue', 'HelveticaNeue', 'Helvetica', Arial, sans-serif;
    }
    .serif() {
      font-family: 'Georgia', 'Times New Roman', Times, serif;
    }
    .monospace() {
      font-family: monospace, serif; _font-family: 'courier new', monospace; 
    }    
  }
}



/*----------------------------------------------------------

 Grid

----------------------------------------------------------*/
#grid {
  // Fixed grid
  .fixed () {
    .colX(@index) when (@index > 0) {
        (~".col@{index}") { .col(@index); }
        .colX (@index - 1);
    }
    .colX(0) {}

    .col (@columns) {
       .gridColWidth(@columns);       
    }

    .gridColWidth (@columns) {
      width: (@columns * ((@actualWidthPX - (@gridGutterWidthPX * (@gridCol - 1))) / @gridCol )) + ((@columns * @gridGutterWidthPX) - @gridGutterWidthPX);
    }

    .colX(@gridCol);
  }
  // Fluid grid
  .fluid () {
    .colX(@index) when (@index > 0) {
        (~"> .col@{index}") { .col(@index); }
        .colX (@index - 1);
    }
    .colX(0) {}

    .col (@columns) {
       .gridColWidth(@columns);       
    }

    .gridColWidth (@columns) {
      @gridWidth : (@columns * ((@actualWidth - (@gridGutterWidth * (@gridCol - 1))) / @gridCol )) + ((@columns * @gridGutterWidth) - @gridGutterWidth);
      width: (@gridWidth/@actualWidth) * 100% ;
    }

    .row-fluid {
      width: 100%;
      .colX(@gridCol);
    }
    
  }
  // Grid row
 .rows() {
    .row-fluid,
    .row {
      overflow: hidden;
      // show grid
      .grid {
        .box-round(3px);
        background: #efefef;
        padding-top: 3px;
        padding-bottom: 3px;
        text-align: center;
      }
      // optionals
      .bg-darkgrey { background: @darkGrey; }
      .gridrow { margin-bottom: 20px; }
      // eof show grid
      > [class*="col"] {
        float: left;
      }
      > [class*="col"]:last-child { margin-right: 0; }
    }
    .row-fluid {
      > [class*="col"] {
        margin-right: @gridGutterWidthPercent;
      }
    } 
    .row { 
      max-width: @maxWidthPX; 
      > [class*="col"] {
        margin-right: @gridGutterWidthPX;
      }
    }
  }
  // Offset
  .offset() {
    .shift {
      padding-left: @gridGutterWidthPercent / 3;
    }
  }

}




/*----------------------------------------------------------

 Button Background

----------------------------------------------------------*/
.buttonBackground(@startColor, @endColor) {
  .gradientBar(@startColor, @endColor);
  .reset-filter();
  &:hover {
    background: @endColor;
  }
}


/*---------------------------------------------------------

 Text Shadow
 @param x 			: number (X-axis)
 @param y 			: number (Y-axis)
 @param z-index		: number (Z-axis)
 @param color 		: color (hex)

/*----------------------------------------------------------*/
.text-shadow(@x, @y, @z, @color){
	text-shadow: @x @y @z @color;
}



/*----------------------------------------------------------

 Box Radius
 @param radius		: number 

----------------------------------------------------------*/
.box-round(@radius) {
	-webkit-border-radius: @radius; 
	-moz-border-radius: @radius; 
	border-radius: @radius; 
}



/*----------------------------------------------------------

 Box Shadow
 @param shadow   : shadow spec  

----------------------------------------------------------*/
.box-shadow(@shadow) {
    -moz-box-shadow: @shadow;
    -webkit-box-shadow: @shadow;
    box-shadow: @shadow;
}



/*----------------------------------------------------------

 Vertical Box Gradient
 @param from      : start color (hex)
 @param to        : end color (hex)
 @param end       : number (divider of region)

----------------------------------------------------------*/
.vertical-box-gradient(@from, @to, @divide){
  background-color: (@from + @to) / @divide;
  background-image:  -webkit-gradient(linear, left top, left bottom, from(@from), to(@to));
  background-image:  -webkit-linear-gradient(top, @from, @to);
  background-image:  -moz-linear-gradient(top, @from, @to);
  background-image:  -ms-linear-gradient(top, @from, @to);
  background-image:  -o-linear-gradient(top, @from, @to);
  background-image:  linear-gradient(top, @from, @to);
}



/*----------------------------------------------------------

 Gradients

----------------------------------------------------------*/
#gradient {
  .horizontal(@startColor, @endColor){
    background-color: @endColor;
    background-image: -moz-linear-gradient(left, @startColor, @endColor); 
    background-image: -ms-linear-gradient(left, @startColor, @endColor); 
    background-image: -webkit-gradient(linear, 0 0, 100% 0, from(@startColor), to(@endColor)); 
    background-image: -webkit-linear-gradient(left, @startColor, @endColor); 
    background-image: -o-linear-gradient(left, @startColor, @endColor); 
    background-image: linear-gradient(left, @startColor, @endColor); 
    background-repeat: repeat-x;
    filter: e(%("progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=1)",@startColor,@endColor)); 
  }
  .vertical(@startColor, @endColor){
    background-color: mix(@startColor, @endColor, 60%);
    background-image: -moz-linear-gradient(top, @startColor, @endColor); // FF 3.6+
    background-image: -ms-linear-gradient(top, @startColor, @endColor); // IE10
    background-image: -webkit-gradient(linear, 0 0, 0 100%, from(@startColor), to(@endColor)); // Safari 4+, Chrome 2+
    background-image: -webkit-linear-gradient(top, @startColor, @endColor); // Safari 5.1+, Chrome 10+
    background-image: -o-linear-gradient(top, @startColor, @endColor); // Opera 11.10
    background-image: linear-gradient(top, @startColor, @endColor); // The standard
    background-repeat: repeat-x;
    filter: e(%("progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=0)",@startColor,@endColor)); // IE9 and down
  }
}

/* Gradient for button and alerts */
.gradientBar(@primaryColor, @secondaryColor) {
  #gradient > .vertical(@primaryColor, @secondaryColor);
  border-color: @secondaryColor @secondaryColor darken(@secondaryColor, 15%);
  border-color: rgba(0,0,0,.1) rgba(0,0,0,.1) fadein(rgba(0,0,0,.1), 15%);
}



/*----------------------------------------------------------

 Transition
 @param transition: start, end

----------------------------------------------------------*/
.transition(@transition) {
  -webkit-transition: @transition;
     -moz-transition: @transition;
      -ms-transition: @transition;
       -o-transition: @transition;
          transition: @transition;
}



/*----------------------------------------------------------

 WebKit style focus

----------------------------------------------------------*/
.tab-focus() {
  // Default
  outline: thin dotted #333;
  // Webkit
  outline: 5px auto -webkit-focus-ring-color;
  outline-offset: -2px;
}



/*----------------------------------------------------------

 IE7 inline block hack

----------------------------------------------------------*/
.ie7-inline-block() {
  *display: inline; 
  *zoom: 1;
}



/*----------------------------------------------------------

 Reset filter for IE

----------------------------------------------------------*/
.reset-filter() {
  filter: progid:DXImageTransform.Microsoft.gradient(enabled = false);
}